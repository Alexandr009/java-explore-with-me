{
  "info": {
    "_postman_id": "055e9452-dc6e-4802-817f-909d7a1ffc3a",
    "name": "FeatureSubscribe",
    "schema": "https://schema.getpostman.com/json/collection/v2.0.0/collection.json",
    "_exporter_id": "25274650"
  },
  "item": [
    {
      "name": "добавление подписки",
      "event": [
        {
          "listen": "test",
          "script": {
            "exec": [
              "pm.test(\"Ответ должен содержать код статуса 201 и данные в формате json\", function() {\r",
              "     pm.expect(pm.response.code).to.equal(201);\r",
              "    pm.response.to.be.withBody;\r",
              "    pm.response.to.be.json;\r",
              "}); \r",
              "pm.test(\"Test user 'id' field\", function () {\r",
              "    var jsonData = pm.response.json();\r",
              "    pm.expect(jsonData).to.have.property('id');\r",
              "    pm.expect(jsonData.id, '\"id\" must be 1').to.eql(1);\r",
              "});\r",
              "\r",
              "pm.test(\"Test user 'name' field\", function () {\r",
              "    var jsonData = pm.response.json();\r",
              "    pm.expect(jsonData).to.have.property('name');\r",
              "});\r",
              "\r",
              "pm.test('Test user followers field', function () {\r",
              "     var jsonData = pm.response.json();\r",
              "    pm.expect(jsonData).to.have.property('followers');\r",
              "});"
            ],
            "type": "text/javascript"
          }
        }
      ],
      "request": {
        "method": "POST",
        "header": [],
        "url": {
          "raw": "http://localhost:8080/users/:user-Id/followers/:follower-Id",
          "protocol": "http",
          "host": [
            "localhost"
          ],
          "port": "8080",
          "path": [
            "users",
            ":user-Id",
            "followers",
            ":follower-Id"
          ],
          "variable": [
            {
              "key": "user-Id",
              "value": "1"
            },
            {
              "key": "follower-Id",
              "value": "2"
            }
          ]
        }
      },
      "response": []
    },
    {
      "name": "добавление подписки тем же пользователем",
      "event": [
        {
          "listen": "test",
          "script": {
            "exec": [
              "pm.test(\"Тест на ошибку добавления подписчика\", function() {\r",
              "    pm.expect(pm.response.code).to.equal(409);\r",
              "});"
            ],
            "type": "text/javascript"
          }
        }
      ],
      "request": {
        "method": "POST",
        "header": [],
        "url": {
          "raw": "http://localhost:8080/users/:user-Id/followers/:follower-Id",
          "protocol": "http",
          "host": [
            "localhost"
          ],
          "port": "8080",
          "path": [
            "users",
            ":user-Id",
            "followers",
            ":follower-Id"
          ],
          "variable": [
            {
              "key": "user-Id",
              "value": "1"
            },
            {
              "key": "follower-Id",
              "value": "1"
            }
          ]
        }
      },
      "response": []
    },
    {
      "name": "получение подписчиков пользователя",
      "event": [
        {
          "listen": "test",
          "script": {
            "exec": [
              "pm.test(\"Ответ должен содержать код статуса 200 и данные в формате json\", function() {\r",
              "    pm.response.to.be.ok;\r",
              "    pm.response.to.be.withBody;\r",
              "    pm.response.to.be.json;\r",
              "}); \r",
              "\r",
              "pm.test(\"Test user 'id' field\", function () {\r",
              "    var jsonData = pm.response.json();\r",
              "    pm.expect(jsonData).to.have.property('id');\r",
              "});\r",
              "\r",
              "pm.test('Test user followers field', function () {\r",
              "     var jsonData = pm.response.json();\r",
              "    pm.expect(jsonData).to.have.property('followers');\r",
              "});"
            ],
            "type": "text/javascript"
          }
        }
      ],
      "request": {
        "method": "GET",
        "header": [],
        "url": {
          "raw": "http://localhost:8080/users/:user-Id/followers",
          "protocol": "http",
          "host": [
            "localhost"
          ],
          "port": "8080",
          "path": [
            "users",
            ":user-Id",
            "followers"
          ],
          "variable": [
            {
              "key": "user-Id",
              "value": "1"
            }
          ]
        }
      },
      "response": []
    },
    {
      "name": "получение событий пользователя (подписчика)",
      "event": [
        {
          "listen": "test",
          "script": {
            "exec": [
              "pm.test(\"Ответ должен содержать код статуса 200 и данные в формате json\", function() {\r",
              "    pm.response.to.be.ok;\r",
              "    pm.response.to.be.withBody;\r",
              "    pm.response.to.be.json;\r",
              "}); \r",
              "\r",
              "pm.test(\"Ответ должен быть списком событий\", function() {\r",
              "    const body = pm.response.json();\r",
              "    pm.expect(body).is.an('array');\r",
              "});"
            ],
            "type": "text/javascript"
          }
        }
      ],
      "request": {
        "method": "GET",
        "header": [],
        "url": {
          "raw": "http://localhost:8080/users/:user-Id/events/followers?from=0&size=10",
          "protocol": "http",
          "host": [
            "localhost"
          ],
          "port": "8080",
          "path": [
            "users",
            ":user-Id",
            "events",
            "followers"
          ],
          "query": [
            {
              "key": "from",
              "value": "0"
            },
            {
              "key": "size",
              "value": "10"
            }
          ],
          "variable": [
            {
              "key": "user-Id",
              "value": "1"
            }
          ]
        }
      },
      "response": []
    },
    {
      "name": "получение событий всех подписок",
      "event": [
        {
          "listen": "test",
          "script": {
            "exec": [
              "pm.test(\"Ответ должен содержать код статуса 200 и данные в формате json\", function() {\r",
              "    pm.response.to.be.ok;\r",
              "    pm.response.to.be.withBody;\r",
              "    pm.response.to.be.json;\r",
              "}); \r",
              "\r",
              "pm.test(\"Ответ должен быть списком событий\", function() {\r",
              "    const body = pm.response.json();\r",
              "    pm.expect(body).is.an('array');\r",
              "});"
            ],
            "type": "text/javascript"
          }
        }
      ],
      "request": {
        "method": "GET",
        "header": [],
        "url": {
          "raw": "http://localhost:8080/users/events/:follower-Id/followers?from=0&size=10",
          "protocol": "http",
          "host": [
            "localhost"
          ],
          "port": "8080",
          "path": [
            "users",
            "events",
            ":follower-Id",
            "followers"
          ],
          "query": [
            {
              "key": "from",
              "value": "0"
            },
            {
              "key": "size",
              "value": "10"
            }
          ],
          "variable": [
            {
              "key": "follower-Id",
              "value": "2"
            }
          ]
        }
      },
      "response": []
    },
    {
      "name": "получение событий пользователя с негативными параметрами",
      "event": [
        {
          "listen": "test",
          "script": {
            "exec": [
              "pm.test(\"Тест на валидацию параметров\", function() {\r",
              "    pm.expect(pm.response.code).to.equal(400);\r",
              "});"
            ],
            "type": "text/javascript"
          }
        }
      ],
      "request": {
        "method": "GET",
        "header": [],
        "url": {
          "raw": "http://localhost:8080/users/:user-Id/events/followers?from=-1&size=10",
          "protocol": "http",
          "host": [
            "localhost"
          ],
          "port": "8080",
          "path": [
            "users",
            ":user-Id",
            "events",
            "followers"
          ],
          "query": [
            {
              "key": "from",
              "value": "-1"
            },
            {
              "key": "size",
              "value": "10"
            }
          ],
          "variable": [
            {
              "key": "user-Id",
              "value": "1"
            }
          ]
        }
      },
      "response": []
    },
    {
      "name": "получение событий всех подписок с нулевым размером",
      "event": [
        {
          "listen": "test",
          "script": {
            "exec": [
              "pm.test(\"Тест на валидацию параметров\", function() {\r",
              "    pm.expect(pm.response.code).to.equal(400);\r",
              "});"
            ],
            "type": "text/javascript"
          }
        }
      ],
      "request": {
        "method": "GET",
        "header": [],
        "url": {
          "raw": "http://localhost:8080/users/events/:follower-Id/followers?from=0&size=0",
          "protocol": "http",
          "host": [
            "localhost"
          ],
          "port": "8080",
          "path": [
            "users",
            "events",
            ":follower-Id",
            "followers"
          ],
          "query": [
            {
              "key": "from",
              "value": "0"
            },
            {
              "key": "size",
              "value": "0"
            }
          ],
          "variable": [
            {
              "key": "follower-Id",
              "value": "2"
            }
          ]
        }
      },
      "response": []
    },
    {
      "name": "получение событий несуществующего пользователя",
      "event": [
        {
          "listen": "test",
          "script": {
            "exec": [
              "pm.test(\"Тест на несуществующего пользователя\", function() {\r",
              "    pm.expect(pm.response.code).to.equal(404);\r",
              "});"
            ],
            "type": "text/javascript"
          }
        }
      ],
      "request": {
        "method": "GET",
        "header": [],
        "url": {
          "raw": "http://localhost:8080/users/:user-Id/events/followers?from=0&size=10",
          "protocol": "http",
          "host": [
            "localhost"
          ],
          "port": "8080",
          "path": [
            "users",
            ":user-Id",
            "events",
            "followers"
          ],
          "query": [
            {
              "key": "from",
              "value": "0"
            },
            {
              "key": "size",
              "value": "10"
            }
          ],
          "variable": [
            {
              "key": "user-Id",
              "value": "999"
            }
          ]
        }
      },
      "response": []
    },
    {
      "name": "удаление подписки",
      "event": [
        {
          "listen": "test",
          "script": {
            "exec": [
              "pm.test(\"Тест на удаление подписчика\", function() {\r",
              "    pm.expect(pm.response.code).to.equal(204);\r",
              "});"
            ],
            "type": "text/javascript"
          }
        }
      ],
      "request": {
        "method": "DELETE",
        "header": [],
        "url": {
          "raw": "http://localhost:8080/users/:user-Id/followers/:follower-Id",
          "protocol": "http",
          "host": [
            "localhost"
          ],
          "port": "8080",
          "path": [
            "users",
            ":user-Id",
            "followers",
            ":follower-Id"
          ],
          "variable": [
            {
              "key": "user-Id",
              "value": "1"
            },
            {
              "key": "follower-Id",
              "value": "2"
            }
          ]
        }
      },
      "response": []
    },
    {
      "name": "удаление несуществующей подписки",
      "event": [
        {
          "listen": "test",
          "script": {
            "exec": [
              "pm.test(\"Тест на удаление несуществующего подписчика\", function() {\r",
              "    pm.expect(pm.response.code).to.equal(404);\r",
              "});"
            ],
            "type": "text/javascript"
          }
        }
      ],
      "request": {
        "method": "DELETE",
        "header": [],
        "url": {
          "raw": "http://localhost:8080/users/:user-Id/followers/:follower-Id",
          "protocol": "http",
          "host": [
            "localhost"
          ],
          "port": "8080",
          "path": [
            "users",
            ":user-Id",
            "followers",
            ":follower-Id"
          ],
          "variable": [
            {
              "key": "user-Id",
              "value": "1"
            },
            {
              "key": "follower-Id",
              "value": "999"
            }
          ]
        }
      },
      "response": []
    }
  ]
}