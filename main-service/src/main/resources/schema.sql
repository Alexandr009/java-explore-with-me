DROP TABLE if EXISTS statistic CASCADE;
DROP TABLE if EXISTS categories CASCADE;
DROP TABLE if EXISTS events CASCADE;
DROP TABLE if EXISTS requests CASCADE;
DROP TABLE if EXISTS complication CASCADE;
DROP TABLE if EXISTS complication_events CASCADE;

CREATE TABLE IF NOT EXISTS users (
                                         id INTEGER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
                                         name VARCHAR(255),
    email VARCHAR(255)
    );

CREATE TABLE IF NOT EXISTS categories (
    id INTEGER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    name VARCHAR(255)
);

CREATE TABLE IF NOT EXISTS events (
    id INTEGER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    annotation VARCHAR,
    category_id INTEGER REFERENCES categories,
    user_id INTEGER REFERENCES users,
    description VARCHAR,
    event_date TIMESTAMP WITH TIME ZONE NOT NULL,
    location_latitude DOUBLE PRECISION,
    location_longitude DOUBLE PRECISION,
    paid BOOLEAN NOT NULL,
    participant_limit INTEGER,
    request_moderation BOOLEAN NOT NULL,
    state VARCHAR(50),
    created_on TIMESTAMP,
    published_on TIMESTAMP,
    title VARCHAR
);

CREATE TABLE IF NOT EXISTS requests
(
    id           BIGINT GENERATED BY DEFAULT AS IDENTITY,
    event_id     BIGINT      ,
    requester_id BIGINT      ,
    created_at   TIMESTAMP   NOT NULL,
    status       VARCHAR(15) ,
    CONSTRAINT PK_request_id PRIMARY KEY (id),
    CONSTRAINT FK_requests_events_id FOREIGN KEY (event_id) REFERENCES events (id) ON DELETE CASCADE ,
    CONSTRAINT FK_requests_users_id FOREIGN KEY (requester_id) REFERENCES users (id) ON DELETE CASCADE
    );

CREATE TABLE IF NOT EXISTS complication
(
    id        BIGINT GENERATED BY DEFAULT AS IDENTITY,
    is_pinned BOOLEAN      ,
    title     VARCHAR(255) ,
    CONSTRAINT PK_complication_id PRIMARY KEY (id)
    );

CREATE TABLE IF NOT EXISTS complication_events
(
    complication_id BIGINT ,
    events_id       BIGINT ,
    CONSTRAINT PK_complication_events PRIMARY KEY (complication_id, events_id),
    CONSTRAINT FK_complication_events_complication_id FOREIGN KEY (complication_id) REFERENCES complication (id) ON DELETE CASCADE ,
    CONSTRAINT FK_complication_events_events_id FOREIGN KEY (events_id) REFERENCES events (id) ON DELETE CASCADE
    );