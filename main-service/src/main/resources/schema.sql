DROP TABLE if EXISTS users CASCADE;
DROP TABLE if EXISTS categories CASCADE;
DROP TABLE if EXISTS events CASCADE;
DROP TABLE if EXISTS requests CASCADE;
DROP TABLE if EXISTS complication CASCADE;
DROP TABLE if EXISTS complication_events CASCADE;

CREATE TABLE IF NOT EXISTS users (
                                     id BIGINT GENERATED BY DEFAULT AS IDENTITY,
                                     name VARCHAR(255) NOT NULL,
    email VARCHAR(255) NOT NULL,
    CONSTRAINT PK_users_id PRIMARY KEY (id),
    CONSTRAINT UQ_users_email UNIQUE (email)
    );

CREATE TABLE IF NOT EXISTS categories (
                                          id BIGINT GENERATED BY DEFAULT AS IDENTITY,
                                          name VARCHAR(200) NOT NULL,
    CONSTRAINT PK_categories_id PRIMARY KEY (id),
    CONSTRAINT UQ_categories_name UNIQUE (name)
    );

CREATE TABLE IF NOT EXISTS events (
                                      id BIGINT GENERATED BY DEFAULT AS IDENTITY,
                                      annotation VARCHAR(2000) NOT NULL,
    category_id BIGINT,
    description VARCHAR(7000),
    event_date TIMESTAMP WITH TIME ZONE NOT NULL,
                             initiator_id BIGINT,
                             location_latitude DOUBLE PRECISION,
                             location_longitude DOUBLE PRECISION,
                             paid BOOLEAN NOT NULL,
                             participant_limit INTEGER NOT NULL,
                             request_moderation BOOLEAN DEFAULT True,
                             state VARCHAR(50),
    created_on TIMESTAMP WITH TIME ZONE NOT NULL,
    published_on TIMESTAMP WITH TIME ZONE,
                             title VARCHAR(120) NOT NULL,
    confirmed_requests INTEGER,
    CONSTRAINT PK_events_id PRIMARY KEY (id),
    CONSTRAINT FK_events_category_id FOREIGN KEY (category_id) REFERENCES categories (id) ON DELETE CASCADE,
    CONSTRAINT FK_events_users_id FOREIGN KEY (initiator_id) REFERENCES users (id) ON DELETE CASCADE
    );

CREATE TABLE IF NOT EXISTS requests (
                                        id BIGINT GENERATED BY DEFAULT AS IDENTITY,
                                        event_id BIGINT NOT NULL,
                                        requester_id BIGINT NOT NULL,
                                        created_at TIMESTAMP NOT NULL,
                                        status VARCHAR(15) NOT NULL,
    CONSTRAINT PK_request_id PRIMARY KEY (id),
    CONSTRAINT FK_requests_events_id FOREIGN KEY (event_id) REFERENCES events (id) ON DELETE CASCADE,
    CONSTRAINT FK_requests_users_id FOREIGN KEY (requester_id) REFERENCES users (id) ON DELETE CASCADE,
    CONSTRAINT UQ_requests_event_requester UNIQUE (event_id, requester_id)
    );

CREATE TABLE IF NOT EXISTS complication (
                                            id BIGINT GENERATED BY DEFAULT AS IDENTITY,
                                            is_pinned BOOLEAN NOT NULL,
                                            title VARCHAR(255) NOT NULL,
    CONSTRAINT PK_complication_id PRIMARY KEY (id)
    );

CREATE TABLE IF NOT EXISTS complication_events (
                                                   complication_id BIGINT NOT NULL,
                                                   events_id BIGINT NOT NULL,
                                                   CONSTRAINT PK_complication_events PRIMARY KEY (complication_id, events_id),
    CONSTRAINT FK_complication_events_complication_id FOREIGN KEY (complication_id) REFERENCES complication (id) ON DELETE CASCADE,
    CONSTRAINT FK_complication_events_events_id FOREIGN KEY (events_id) REFERENCES events (id) ON DELETE CASCADE
    );

CREATE TABLE IF NOT EXISTS followers
(
    user_id     BIGINT NOT NULL,
    follower_id BIGINT NOT NULL,
    CONSTRAINT PK_followers PRIMARY KEY (user_id, follower_id),
    CONSTRAINT FK_user_id_user_id FOREIGN KEY (user_id) REFERENCES users (id) ON DELETE CASCADE,
    CONSTRAINT FK_follower_id_user_id FOREIGN KEY (follower_id) REFERENCES users (id) ON DELETE CASCADE
    );

CREATE INDEX IF NOT EXISTS IDX_events_category_id ON events (category_id);
CREATE INDEX IF NOT EXISTS IDX_events_initiator_id ON events (initiator_id);
CREATE INDEX IF NOT EXISTS IDX_requests_event_id ON requests (event_id);
CREATE INDEX IF NOT EXISTS IDX_requests_requester_id ON requests (requester_id);
CREATE INDEX IF NOT EXISTS IDX_complication_events_complication_id ON complication_events (complication_id);
CREATE INDEX IF NOT EXISTS IDX_complication_events_events_id ON complication_events (events_id);